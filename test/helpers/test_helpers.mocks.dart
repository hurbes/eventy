// Mocks generated by Mockito 5.4.4 from annotations
// in eventy/test/helpers/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:ui' as _i18;

import 'package:dio/dio.dart' as _i8;
import 'package:dio/src/adapter.dart' as _i4;
import 'package:dio/src/cancel_token.dart' as _i21;
import 'package:dio/src/dio_mixin.dart' as _i6;
import 'package:dio/src/options.dart' as _i3;
import 'package:dio/src/response.dart' as _i7;
import 'package:dio/src/transformer.dart' as _i5;
import 'package:eventy/core/models/data_state/data_set.dart' as _i14;
import 'package:eventy/core/models/event/event.dart' as _i13;
import 'package:eventy/core/repository/app_repository.dart' as _i30;
import 'package:eventy/core/services/api_service.dart' as _i22;
import 'package:eventy/core/services/database_service.dart' as _i24;
import 'package:eventy/core/services/dio_service.dart' as _i26;
import 'package:eventy/core/services/objectbox_service.dart' as _i25;
import 'package:eventy/core/services/order_service.dart' as _i27;
import 'package:eventy/core/services/payment_service.dart' as _i20;
import 'package:eventy/core/services/stripe_service.dart' as _i29;
import 'package:flutter/foundation.dart' as _i11;
import 'package:flutter/material.dart' as _i16;
import 'package:flutter_stripe/flutter_stripe.dart' as _i28;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i23;
import 'package:objectbox/objectbox.dart' as _i10;
import 'package:stacked/stacked.dart' as _i2;
import 'package:stacked_services/src/models/overlay_request.dart' as _i19;
import 'package:stacked_services/src/models/overlay_response.dart' as _i17;
import 'package:stacked_services/stacked_services.dart' as _i15;
import 'package:stripe_platform_interface/stripe_platform_interface.dart'
    as _i12;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRootStackRouter_0 extends _i1.SmartFake
    implements _i2.RootStackRouter {
  _FakeRootStackRouter_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRouteData_1 extends _i1.SmartFake implements _i2.RouteData {
  _FakeRouteData_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRoutingController_2 extends _i1.SmartFake
    implements _i2.RoutingController {
  _FakeRoutingController_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseOptions_3 extends _i1.SmartFake implements _i3.BaseOptions {
  _FakeBaseOptions_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpClientAdapter_4 extends _i1.SmartFake
    implements _i4.HttpClientAdapter {
  _FakeHttpClientAdapter_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransformer_5 extends _i1.SmartFake implements _i5.Transformer {
  _FakeTransformer_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInterceptors_6 extends _i1.SmartFake implements _i6.Interceptors {
  _FakeInterceptors_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_7<T1> extends _i1.SmartFake implements _i7.Response<T1> {
  _FakeResponse_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDio_8 extends _i1.SmartFake implements _i8.Dio {
  _FakeDio_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_9<T1> extends _i1.SmartFake implements _i9.Future<T1> {
  _FakeFuture_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStore_10 extends _i1.SmartFake implements _i10.Store {
  _FakeStore_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeValueListenable_11<T> extends _i1.SmartFake
    implements _i11.ValueListenable<T> {
  _FakeValueListenable_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePlatformPayPaymentMethod_12 extends _i1.SmartFake
    implements _i12.PlatformPayPaymentMethod {
  _FakePlatformPayPaymentMethod_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSetupIntent_13 extends _i1.SmartFake implements _i12.SetupIntent {
  _FakeSetupIntent_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePaymentIntent_14 extends _i1.SmartFake
    implements _i12.PaymentIntent {
  _FakePaymentIntent_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTokenData_15 extends _i1.SmartFake implements _i12.TokenData {
  _FakeTokenData_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePaymentMethod_16 extends _i1.SmartFake
    implements _i12.PaymentMethod {
  _FakePaymentMethod_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddToWalletResult_17 extends _i1.SmartFake
    implements _i12.AddToWalletResult {
  _FakeAddToWalletResult_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCanAddCardToWalletResult_18 extends _i1.SmartFake
    implements _i12.CanAddCardToWalletResult {
  _FakeCanAddCardToWalletResult_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIsCardInWalletResult_19 extends _i1.SmartFake
    implements _i12.IsCardInWalletResult {
  _FakeIsCardInWalletResult_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFinancialConnectionTokenResult_20 extends _i1.SmartFake
    implements _i12.FinancialConnectionTokenResult {
  _FakeFinancialConnectionTokenResult_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFinancialConnectionSessionResult_21 extends _i1.SmartFake
    implements _i12.FinancialConnectionSessionResult {
  _FakeFinancialConnectionSessionResult_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEvent_22 extends _i1.SmartFake implements _i13.Event {
  _FakeEvent_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePaginatedOption_23 extends _i1.SmartFake
    implements _i14.PaginatedOption {
  _FakePaginatedOption_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RouterService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRouterService extends _i1.Mock implements _i15.RouterService {
  @override
  _i2.RootStackRouter get router => (super.noSuchMethod(
        Invocation.getter(#router),
        returnValue: _FakeRootStackRouter_0(
          this,
          Invocation.getter(#router),
        ),
        returnValueForMissingStub: _FakeRootStackRouter_0(
          this,
          Invocation.getter(#router),
        ),
      ) as _i2.RootStackRouter);

  @override
  set router(_i2.RootStackRouter? _router) => super.noSuchMethod(
        Invocation.setter(
          #router,
          _router,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i2.StackedPage<dynamic>> get stack => (super.noSuchMethod(
        Invocation.getter(#stack),
        returnValue: <_i2.StackedPage<dynamic>>[],
        returnValueForMissingStub: <_i2.StackedPage<dynamic>>[],
      ) as List<_i2.StackedPage<dynamic>>);

  @override
  _i2.RouteData get topRoute => (super.noSuchMethod(
        Invocation.getter(#topRoute),
        returnValue: _FakeRouteData_1(
          this,
          Invocation.getter(#topRoute),
        ),
        returnValueForMissingStub: _FakeRouteData_1(
          this,
          Invocation.getter(#topRoute),
        ),
      ) as _i2.RouteData);

  @override
  dynamic setRouter(_i2.RootStackRouter? router) => super.noSuchMethod(
        Invocation.method(
          #setRouter,
          [router],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<dynamic> navigateTo(
    _i2.PageRouteInfo<dynamic>? route, {
    _i2.OnNavigationFailure? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateTo,
          [route],
          {#onFailure: onFailure},
        ),
        returnValue: _i9.Future<dynamic>.value(),
        returnValueForMissingStub: _i9.Future<dynamic>.value(),
      ) as _i9.Future<dynamic>);

  @override
  _i9.Future<void> navigateToPath({
    required String? path,
    bool? includePrefixMatches = false,
    _i2.OnNavigationFailure? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToPath,
          [],
          {
            #path: path,
            #includePrefixMatches: includePrefixMatches,
            #onFailure: onFailure,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<T?> navigateWithTransition<T extends Object?>(
    _i16.Widget? widget, {
    _i16.RouteTransitionsBuilder? transitionBuilder,
    bool? fullscreenDialog = false,
    Duration? transitionDuration = const Duration(milliseconds: 300),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateWithTransition,
          [widget],
          {
            #transitionBuilder: transitionBuilder,
            #fullscreenDialog: fullscreenDialog,
            #transitionDuration: transitionDuration,
          },
        ),
        returnValue: _i9.Future<T?>.value(),
        returnValueForMissingStub: _i9.Future<T?>.value(),
      ) as _i9.Future<T?>);

  @override
  _i9.Future<T?> replaceWith<T extends Object?>(
    _i2.PageRouteInfo<dynamic>? route, {
    _i2.OnNavigationFailure? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWith,
          [route],
          {#onFailure: onFailure},
        ),
        returnValue: _i9.Future<T?>.value(),
        returnValueForMissingStub: _i9.Future<T?>.value(),
      ) as _i9.Future<T?>);

  @override
  _i9.Future<void> clearStackAndShow(
    _i2.PageRouteInfo<dynamic>? route, {
    _i2.OnNavigationFailure? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShow,
          [route],
          {#onFailure: onFailure},
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> clearStackAndShowView(
    _i16.Widget? widget, {
    _i16.RouteTransitionsBuilder? transitionBuilder,
    bool? fullscreenDialog = false,
    Duration? transitionDuration = const Duration(milliseconds: 300),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShowView,
          [widget],
          {
            #transitionBuilder: transitionBuilder,
            #fullscreenDialog: fullscreenDialog,
            #transitionDuration: transitionDuration,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  void popForced<T extends Object?>([T? result]) => super.noSuchMethod(
        Invocation.method(
          #popForced,
          [result],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<bool> pop<T extends Object?>([T? result]) => (super.noSuchMethod(
        Invocation.method(
          #pop,
          [result],
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  void back<T extends Object?>({T? result}) => super.noSuchMethod(
        Invocation.method(
          #back,
          [],
          {#result: result},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RoutingController topMostRouter({bool? ignorePagelessRoutes = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #topMostRouter,
          [],
          {#ignorePagelessRoutes: ignorePagelessRoutes},
        ),
        returnValue: _FakeRoutingController_2(
          this,
          Invocation.method(
            #topMostRouter,
            [],
            {#ignorePagelessRoutes: ignorePagelessRoutes},
          ),
        ),
        returnValueForMissingStub: _FakeRoutingController_2(
          this,
          Invocation.method(
            #topMostRouter,
            [],
            {#ignorePagelessRoutes: ignorePagelessRoutes},
          ),
        ),
      ) as _i2.RoutingController);

  @override
  _i9.Future<T?> pushNativeRoute<T extends Object?>(_i16.Route<T>? route) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushNativeRoute,
          [route],
        ),
        returnValue: _i9.Future<T?>.value(),
        returnValueForMissingStub: _i9.Future<T?>.value(),
      ) as _i9.Future<T?>);
}

/// A class which mocks [BottomSheetService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBottomSheetService extends _i1.Mock
    implements _i15.BottomSheetService {
  @override
  void setCustomSheetBuilders(Map<dynamic, _i15.SheetBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #setCustomSheetBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<_i17.SheetResponse<dynamic>?> showBottomSheet({
    required String? title,
    String? description,
    String? confirmButtonTitle = r'Ok',
    String? cancelButtonTitle,
    bool? enableDrag = true,
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
    double? elevation = 1.0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showBottomSheet,
          [],
          {
            #title: title,
            #description: description,
            #confirmButtonTitle: confirmButtonTitle,
            #cancelButtonTitle: cancelButtonTitle,
            #enableDrag: enableDrag,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
            #elevation: elevation,
          },
        ),
        returnValue: _i9.Future<_i17.SheetResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i9.Future<_i17.SheetResponse<dynamic>?>.value(),
      ) as _i9.Future<_i17.SheetResponse<dynamic>?>);

  @override
  _i9.Future<_i17.SheetResponse<T>?> showCustomSheet<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i18.Color? barrierColor = const _i18.Color(2315255808),
    double? elevation = 1.0,
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    String? barrierLabel = r'',
    dynamic customData,
    R? data,
    bool? enableDrag = true,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomSheet,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #elevation: elevation,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #barrierLabel: barrierLabel,
            #customData: customData,
            #data: data,
            #enableDrag: enableDrag,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i9.Future<_i17.SheetResponse<T>?>.value(),
        returnValueForMissingStub: _i9.Future<_i17.SheetResponse<T>?>.value(),
      ) as _i9.Future<_i17.SheetResponse<T>?>);

  @override
  void completeSheet(_i17.SheetResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeSheet,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DialogService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDialogService extends _i1.Mock implements _i15.DialogService {
  @override
  void registerCustomDialogBuilders(
          Map<dynamic, _i15.DialogBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerCustomDialogBuilder({
    required dynamic variant,
    required _i16.Widget Function(
      _i16.BuildContext,
      _i19.DialogRequest<dynamic>,
      dynamic Function(_i17.DialogResponse<dynamic>),
    )? builder,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilder,
          [],
          {
            #variant: variant,
            #builder: builder,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<_i17.DialogResponse<dynamic>?> showDialog({
    String? title,
    String? description,
    String? cancelTitle,
    _i18.Color? cancelTitleColor,
    String? buttonTitle = r'Ok',
    _i18.Color? buttonTitleColor,
    bool? barrierDismissible = false,
    _i15.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #buttonTitle: buttonTitle,
            #buttonTitleColor: buttonTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i9.Future<_i17.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i9.Future<_i17.DialogResponse<dynamic>?>.value(),
      ) as _i9.Future<_i17.DialogResponse<dynamic>?>);

  @override
  _i9.Future<_i17.DialogResponse<T>?> showCustomDialog<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i18.Color? barrierColor = const _i18.Color(2315255808),
    bool? barrierDismissible = false,
    String? barrierLabel = r'',
    bool? useSafeArea = true,
    dynamic customData,
    R? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomDialog,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #barrierLabel: barrierLabel,
            #useSafeArea: useSafeArea,
            #customData: customData,
            #data: data,
          },
        ),
        returnValue: _i9.Future<_i17.DialogResponse<T>?>.value(),
        returnValueForMissingStub: _i9.Future<_i17.DialogResponse<T>?>.value(),
      ) as _i9.Future<_i17.DialogResponse<T>?>);

  @override
  _i9.Future<_i17.DialogResponse<dynamic>?> showConfirmationDialog({
    String? title,
    String? description,
    String? cancelTitle = r'Cancel',
    _i18.Color? cancelTitleColor,
    String? confirmationTitle = r'Ok',
    _i18.Color? confirmationTitleColor,
    bool? barrierDismissible = false,
    _i15.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showConfirmationDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #confirmationTitle: confirmationTitle,
            #confirmationTitleColor: confirmationTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i9.Future<_i17.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i9.Future<_i17.DialogResponse<dynamic>?>.value(),
      ) as _i9.Future<_i17.DialogResponse<dynamic>?>);

  @override
  void completeDialog(_i17.DialogResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeDialog,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [PaymentService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaymentService extends _i1.Mock implements _i20.PaymentService {}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i8.Dio {
  @override
  _i3.BaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeBaseOptions_3(
          this,
          Invocation.getter(#options),
        ),
        returnValueForMissingStub: _FakeBaseOptions_3(
          this,
          Invocation.getter(#options),
        ),
      ) as _i3.BaseOptions);

  @override
  set options(_i3.BaseOptions? _options) => super.noSuchMethod(
        Invocation.setter(
          #options,
          _options,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.HttpClientAdapter get httpClientAdapter => (super.noSuchMethod(
        Invocation.getter(#httpClientAdapter),
        returnValue: _FakeHttpClientAdapter_4(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
        returnValueForMissingStub: _FakeHttpClientAdapter_4(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
      ) as _i4.HttpClientAdapter);

  @override
  set httpClientAdapter(_i4.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(
          #httpClientAdapter,
          _httpClientAdapter,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Transformer get transformer => (super.noSuchMethod(
        Invocation.getter(#transformer),
        returnValue: _FakeTransformer_5(
          this,
          Invocation.getter(#transformer),
        ),
        returnValueForMissingStub: _FakeTransformer_5(
          this,
          Invocation.getter(#transformer),
        ),
      ) as _i5.Transformer);

  @override
  set transformer(_i5.Transformer? _transformer) => super.noSuchMethod(
        Invocation.setter(
          #transformer,
          _transformer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Interceptors get interceptors => (super.noSuchMethod(
        Invocation.getter(#interceptors),
        returnValue: _FakeInterceptors_6(
          this,
          Invocation.getter(#interceptors),
        ),
        returnValueForMissingStub: _FakeInterceptors_6(
          this,
          Invocation.getter(#interceptors),
        ),
      ) as _i6.Interceptors);

  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<_i7.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i21.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response<T>>);

  @override
  _i9.Future<_i7.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i3.Options? options,
    _i21.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #headUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response<T>>);

  @override
  _i9.Future<_i7.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i21.CancelToken? cancelToken,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response<T>>);

  @override
  _i9.Future<_i7.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i3.Options? options,
    _i21.CancelToken? cancelToken,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response<T>>);

  @override
  _i9.Future<_i7.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i21.CancelToken? cancelToken,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response<T>>);

  @override
  _i9.Future<_i7.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i3.Options? options,
    _i21.CancelToken? cancelToken,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response<T>>);

  @override
  _i9.Future<_i7.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i21.CancelToken? cancelToken,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response<T>>);

  @override
  _i9.Future<_i7.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i3.Options? options,
    _i21.CancelToken? cancelToken,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response<T>>);

  @override
  _i9.Future<_i7.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i21.CancelToken? cancelToken,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response<T>>);

  @override
  _i9.Future<_i7.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i3.Options? options,
    _i21.CancelToken? cancelToken,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response<T>>);

  @override
  _i9.Future<_i7.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i21.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response<T>>);

  @override
  _i9.Future<_i7.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i3.Options? options,
    _i21.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response<T>>);

  @override
  _i9.Future<_i7.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i3.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i21.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i3.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #download,
          [
            urlPath,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i9.Future<_i7.Response<dynamic>>.value(_FakeResponse_7<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i7.Response<dynamic>>.value(_FakeResponse_7<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response<dynamic>>);

  @override
  _i9.Future<_i7.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i3.ProgressCallback? onReceiveProgress,
    _i21.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i3.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadUri,
          [
            uri,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i9.Future<_i7.Response<dynamic>>.value(_FakeResponse_7<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i7.Response<dynamic>>.value(_FakeResponse_7<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response<dynamic>>);

  @override
  _i9.Future<_i7.Response<T>> request<T>(
    String? url, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i21.CancelToken? cancelToken,
    _i3.Options? options,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [url],
          {
            #data: data,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response<T>>);

  @override
  _i9.Future<_i7.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i21.CancelToken? cancelToken,
    _i3.Options? options,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUri,
          [uri],
          {
            #data: data,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i9.Future<_i7.Response<T>>);

  @override
  _i9.Future<_i7.Response<T>> fetch<T>(_i3.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [requestOptions],
        ),
        returnValue: _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i7.Response<T>>.value(_FakeResponse_7<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
      ) as _i9.Future<_i7.Response<T>>);
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i22.ApiService {
  @override
  _i8.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_8(
          this,
          Invocation.getter(#dio),
        ),
        returnValueForMissingStub: _FakeDio_8(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i8.Dio);

  @override
  bool get enableLogs => (super.noSuchMethod(
        Invocation.getter(#enableLogs),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i9.Future<T> get<T>({
    required String? endpoint,
    Map<String, dynamic>? queryParameters,
    Map<String, dynamic>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [],
          {
            #endpoint: endpoint,
            #queryParameters: queryParameters,
            #headers: headers,
          },
        ),
        returnValue: _i23.ifNotNull(
              _i23.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #get,
                  [],
                  {
                    #endpoint: endpoint,
                    #queryParameters: queryParameters,
                    #headers: headers,
                  },
                ),
              ),
              (T v) => _i9.Future<T>.value(v),
            ) ??
            _FakeFuture_9<T>(
              this,
              Invocation.method(
                #get,
                [],
                {
                  #endpoint: endpoint,
                  #queryParameters: queryParameters,
                  #headers: headers,
                },
              ),
            ),
        returnValueForMissingStub: _i23.ifNotNull(
              _i23.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #get,
                  [],
                  {
                    #endpoint: endpoint,
                    #queryParameters: queryParameters,
                    #headers: headers,
                  },
                ),
              ),
              (T v) => _i9.Future<T>.value(v),
            ) ??
            _FakeFuture_9<T>(
              this,
              Invocation.method(
                #get,
                [],
                {
                  #endpoint: endpoint,
                  #queryParameters: queryParameters,
                  #headers: headers,
                },
              ),
            ),
      ) as _i9.Future<T>);

  @override
  _i9.Future<T> post<T>({
    required String? endpoint,
    Map<String, dynamic>? data,
    Map<String, dynamic>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [],
          {
            #endpoint: endpoint,
            #data: data,
            #headers: headers,
          },
        ),
        returnValue: _i23.ifNotNull(
              _i23.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #post,
                  [],
                  {
                    #endpoint: endpoint,
                    #data: data,
                    #headers: headers,
                  },
                ),
              ),
              (T v) => _i9.Future<T>.value(v),
            ) ??
            _FakeFuture_9<T>(
              this,
              Invocation.method(
                #post,
                [],
                {
                  #endpoint: endpoint,
                  #data: data,
                  #headers: headers,
                },
              ),
            ),
        returnValueForMissingStub: _i23.ifNotNull(
              _i23.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #post,
                  [],
                  {
                    #endpoint: endpoint,
                    #data: data,
                    #headers: headers,
                  },
                ),
              ),
              (T v) => _i9.Future<T>.value(v),
            ) ??
            _FakeFuture_9<T>(
              this,
              Invocation.method(
                #post,
                [],
                {
                  #endpoint: endpoint,
                  #data: data,
                  #headers: headers,
                },
              ),
            ),
      ) as _i9.Future<T>);

  @override
  _i9.Future<T> put<T>({
    required String? endpoint,
    required Map<String, dynamic>? data,
    Map<String, dynamic>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [],
          {
            #endpoint: endpoint,
            #data: data,
            #headers: headers,
          },
        ),
        returnValue: _i23.ifNotNull(
              _i23.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #put,
                  [],
                  {
                    #endpoint: endpoint,
                    #data: data,
                    #headers: headers,
                  },
                ),
              ),
              (T v) => _i9.Future<T>.value(v),
            ) ??
            _FakeFuture_9<T>(
              this,
              Invocation.method(
                #put,
                [],
                {
                  #endpoint: endpoint,
                  #data: data,
                  #headers: headers,
                },
              ),
            ),
        returnValueForMissingStub: _i23.ifNotNull(
              _i23.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #put,
                  [],
                  {
                    #endpoint: endpoint,
                    #data: data,
                    #headers: headers,
                  },
                ),
              ),
              (T v) => _i9.Future<T>.value(v),
            ) ??
            _FakeFuture_9<T>(
              this,
              Invocation.method(
                #put,
                [],
                {
                  #endpoint: endpoint,
                  #data: data,
                  #headers: headers,
                },
              ),
            ),
      ) as _i9.Future<T>);

  @override
  _i9.Future<T> delete<T>({
    required String? endpoint,
    Map<String, dynamic>? queryParameters,
    Map<String, dynamic>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {
            #endpoint: endpoint,
            #queryParameters: queryParameters,
            #headers: headers,
          },
        ),
        returnValue: _i23.ifNotNull(
              _i23.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #delete,
                  [],
                  {
                    #endpoint: endpoint,
                    #queryParameters: queryParameters,
                    #headers: headers,
                  },
                ),
              ),
              (T v) => _i9.Future<T>.value(v),
            ) ??
            _FakeFuture_9<T>(
              this,
              Invocation.method(
                #delete,
                [],
                {
                  #endpoint: endpoint,
                  #queryParameters: queryParameters,
                  #headers: headers,
                },
              ),
            ),
        returnValueForMissingStub: _i23.ifNotNull(
              _i23.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #delete,
                  [],
                  {
                    #endpoint: endpoint,
                    #queryParameters: queryParameters,
                    #headers: headers,
                  },
                ),
              ),
              (T v) => _i9.Future<T>.value(v),
            ) ??
            _FakeFuture_9<T>(
              this,
              Invocation.method(
                #delete,
                [],
                {
                  #endpoint: endpoint,
                  #queryParameters: queryParameters,
                  #headers: headers,
                },
              ),
            ),
      ) as _i9.Future<T>);

  @override
  void logResponse(_i7.Response<dynamic>? response) => super.noSuchMethod(
        Invocation.method(
          #logResponse,
          [response],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logGenericException(
    String? method,
    String? endpoint,
    Object? error,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #logGenericException,
          [
            method,
            endpoint,
            error,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleException(_i8.DioException? e) => super.noSuchMethod(
        Invocation.method(
          #handleException,
          [e],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logEntryCheck() => super.noSuchMethod(
        Invocation.method(
          #logEntryCheck,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logD(dynamic message) => super.noSuchMethod(
        Invocation.method(
          #logD,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logI(dynamic message) => super.noSuchMethod(
        Invocation.method(
          #logI,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logW(dynamic message) => super.noSuchMethod(
        Invocation.method(
          #logW,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logE(dynamic message) => super.noSuchMethod(
        Invocation.method(
          #logE,
          [message],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseService extends _i1.Mock implements _i24.DatabaseService {
  @override
  bool get enableLogs => (super.noSuchMethod(
        Invocation.getter(#enableLogs),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i9.Future<void> add<T>(T? object) => (super.noSuchMethod(
        Invocation.method(
          #add,
          [object],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> update<T>(T? object) => (super.noSuchMethod(
        Invocation.method(
          #update,
          [object],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> delete<T>(T? object) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [object],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<List<T>> fetchAll<T>() => (super.noSuchMethod(
        Invocation.method(
          #fetchAll,
          [],
        ),
        returnValue: _i9.Future<List<T>>.value(<T>[]),
        returnValueForMissingStub: _i9.Future<List<T>>.value(<T>[]),
      ) as _i9.Future<List<T>>);

  @override
  _i9.Future<T?> fetchById<T>(int? id) => (super.noSuchMethod(
        Invocation.method(
          #fetchById,
          [id],
        ),
        returnValue: _i9.Future<T?>.value(),
        returnValueForMissingStub: _i9.Future<T?>.value(),
      ) as _i9.Future<T?>);

  @override
  _i9.Future<List<T>> query<T>(String? query) => (super.noSuchMethod(
        Invocation.method(
          #query,
          [query],
        ),
        returnValue: _i9.Future<List<T>>.value(<T>[]),
        returnValueForMissingStub: _i9.Future<List<T>>.value(<T>[]),
      ) as _i9.Future<List<T>>);

  @override
  _i9.Stream<List<T>> queryStream<T>(String? query) => (super.noSuchMethod(
        Invocation.method(
          #queryStream,
          [query],
        ),
        returnValue: _i9.Stream<List<T>>.empty(),
        returnValueForMissingStub: _i9.Stream<List<T>>.empty(),
      ) as _i9.Stream<List<T>>);

  @override
  _i9.Future<void> clearAll<T>() => (super.noSuchMethod(
        Invocation.method(
          #clearAll,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logEntryCheck() => super.noSuchMethod(
        Invocation.method(
          #logEntryCheck,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logD(dynamic message) => super.noSuchMethod(
        Invocation.method(
          #logD,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logI(dynamic message) => super.noSuchMethod(
        Invocation.method(
          #logI,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logW(dynamic message) => super.noSuchMethod(
        Invocation.method(
          #logW,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logE(dynamic message) => super.noSuchMethod(
        Invocation.method(
          #logE,
          [message],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ObjectboxService].
///
/// See the documentation for Mockito's code generation for more information.
class MockObjectboxService extends _i1.Mock implements _i25.ObjectboxService {
  @override
  _i10.Store get store => (super.noSuchMethod(
        Invocation.getter(#store),
        returnValue: _FakeStore_10(
          this,
          Invocation.getter(#store),
        ),
        returnValueForMissingStub: _FakeStore_10(
          this,
          Invocation.getter(#store),
        ),
      ) as _i10.Store);

  @override
  set store(_i10.Store? _store) => super.noSuchMethod(
        Invocation.setter(
          #store,
          _store,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [DioService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDioService extends _i1.Mock implements _i26.DioService {}

/// A class which mocks [OrderService].
///
/// See the documentation for Mockito's code generation for more information.
class MockOrderService extends _i1.Mock implements _i27.OrderService {
  @override
  Map<_i13.Ticket, int> get selectedTickets => (super.noSuchMethod(
        Invocation.getter(#selectedTickets),
        returnValue: <_i13.Ticket, int>{},
        returnValueForMissingStub: <_i13.Ticket, int>{},
      ) as Map<_i13.Ticket, int>);

  @override
  bool get enableLogs => (super.noSuchMethod(
        Invocation.getter(#enableLogs),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  void setActiveEvent(_i13.Event? event) => super.noSuchMethod(
        Invocation.method(
          #setActiveEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  int quantityForTicket(_i13.Ticket? ticket) => (super.noSuchMethod(
        Invocation.method(
          #quantityForTicket,
          [ticket],
        ),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  void addTicket(_i13.Ticket? ticket) => super.noSuchMethod(
        Invocation.method(
          #addTicket,
          [ticket],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeTicket(_i13.Ticket? ticket) => super.noSuchMethod(
        Invocation.method(
          #removeTicket,
          [ticket],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool canAddMoreTickets(_i13.Ticket? ticket) => (super.noSuchMethod(
        Invocation.method(
          #canAddMoreTickets,
          [ticket],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool canRemoveTickets(_i13.Ticket? ticket) => (super.noSuchMethod(
        Invocation.method(
          #canRemoveTickets,
          [ticket],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  Map<String, dynamic> getTicketsPayload() => (super.noSuchMethod(
        Invocation.method(
          #getTicketsPayload,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i9.Future<void> createOrder() => (super.noSuchMethod(
        Invocation.method(
          #createOrder,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> completeOrder(Map<String, dynamic>? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #completeOrder,
          [data],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> createPayment() => (super.noSuchMethod(
        Invocation.method(
          #createPayment,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logEntryCheck() => super.noSuchMethod(
        Invocation.method(
          #logEntryCheck,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logD(dynamic message) => super.noSuchMethod(
        Invocation.method(
          #logD,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logI(dynamic message) => super.noSuchMethod(
        Invocation.method(
          #logI,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logW(dynamic message) => super.noSuchMethod(
        Invocation.method(
          #logW,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logE(dynamic message) => super.noSuchMethod(
        Invocation.method(
          #logE,
          [message],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Stripe].
///
/// See the documentation for Mockito's code generation for more information.
class MockStripe extends _i1.Mock implements _i28.Stripe {
  @override
  bool get debugUpdatePlatformSheetCalled => (super.noSuchMethod(
        Invocation.getter(#debugUpdatePlatformSheetCalled),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set debugUpdatePlatformSheetCalled(bool? _debugUpdatePlatformSheetCalled) =>
      super.noSuchMethod(
        Invocation.setter(
          #debugUpdatePlatformSheetCalled,
          _debugUpdatePlatformSheetCalled,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get debugConfigurePlatformOrderTrackingCalled => (super.noSuchMethod(
        Invocation.getter(#debugConfigurePlatformOrderTrackingCalled),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set debugConfigurePlatformOrderTrackingCalled(
          bool? _debugConfigurePlatformOrderTrackingCalled) =>
      super.noSuchMethod(
        Invocation.setter(
          #debugConfigurePlatformOrderTrackingCalled,
          _debugConfigurePlatformOrderTrackingCalled,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.ValueListenable<bool> get isPlatformPaySupportedListenable =>
      (super.noSuchMethod(
        Invocation.getter(#isPlatformPaySupportedListenable),
        returnValue: _FakeValueListenable_11<bool>(
          this,
          Invocation.getter(#isPlatformPaySupportedListenable),
        ),
        returnValueForMissingStub: _FakeValueListenable_11<bool>(
          this,
          Invocation.getter(#isPlatformPaySupportedListenable),
        ),
      ) as _i11.ValueListenable<bool>);

  @override
  _i9.Future<void> applySettings() => (super.noSuchMethod(
        Invocation.method(
          #applySettings,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<bool> isPlatformPaySupported({
    _i12.IsGooglePaySupportedParams? googlePay,
    _i12.PlatformPayWebPaymentRequestCreateOptions?
        webPaymentRequestCreateOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #isPlatformPaySupported,
          [],
          {
            #googlePay: googlePay,
            #webPaymentRequestCreateOptions: webPaymentRequestCreateOptions,
          },
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<_i12.PlatformPayPaymentMethod> createPlatformPayPaymentMethod({
    required _i12.PlatformPayPaymentMethodParams? params,
    bool? usesDeprecatedTokenFlow = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPlatformPayPaymentMethod,
          [],
          {
            #params: params,
            #usesDeprecatedTokenFlow: usesDeprecatedTokenFlow,
          },
        ),
        returnValue: _i9.Future<_i12.PlatformPayPaymentMethod>.value(
            _FakePlatformPayPaymentMethod_12(
          this,
          Invocation.method(
            #createPlatformPayPaymentMethod,
            [],
            {
              #params: params,
              #usesDeprecatedTokenFlow: usesDeprecatedTokenFlow,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i12.PlatformPayPaymentMethod>.value(
                _FakePlatformPayPaymentMethod_12(
          this,
          Invocation.method(
            #createPlatformPayPaymentMethod,
            [],
            {
              #params: params,
              #usesDeprecatedTokenFlow: usesDeprecatedTokenFlow,
            },
          ),
        )),
      ) as _i9.Future<_i12.PlatformPayPaymentMethod>);

  @override
  _i9.Future<_i12.SetupIntent> confirmPlatformPaySetupIntent({
    required String? clientSecret,
    required _i12.PlatformPayConfirmParams? confirmParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmPlatformPaySetupIntent,
          [],
          {
            #clientSecret: clientSecret,
            #confirmParams: confirmParams,
          },
        ),
        returnValue: _i9.Future<_i12.SetupIntent>.value(_FakeSetupIntent_13(
          this,
          Invocation.method(
            #confirmPlatformPaySetupIntent,
            [],
            {
              #clientSecret: clientSecret,
              #confirmParams: confirmParams,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i12.SetupIntent>.value(_FakeSetupIntent_13(
          this,
          Invocation.method(
            #confirmPlatformPaySetupIntent,
            [],
            {
              #clientSecret: clientSecret,
              #confirmParams: confirmParams,
            },
          ),
        )),
      ) as _i9.Future<_i12.SetupIntent>);

  @override
  _i9.Future<_i12.PaymentIntent> confirmPlatformPayPaymentIntent({
    required String? clientSecret,
    required _i12.PlatformPayConfirmParams? confirmParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmPlatformPayPaymentIntent,
          [],
          {
            #clientSecret: clientSecret,
            #confirmParams: confirmParams,
          },
        ),
        returnValue: _i9.Future<_i12.PaymentIntent>.value(_FakePaymentIntent_14(
          this,
          Invocation.method(
            #confirmPlatformPayPaymentIntent,
            [],
            {
              #clientSecret: clientSecret,
              #confirmParams: confirmParams,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i12.PaymentIntent>.value(_FakePaymentIntent_14(
          this,
          Invocation.method(
            #confirmPlatformPayPaymentIntent,
            [],
            {
              #clientSecret: clientSecret,
              #confirmParams: confirmParams,
            },
          ),
        )),
      ) as _i9.Future<_i12.PaymentIntent>);

  @override
  _i9.Future<void> updatePlatformSheet(
          {required _i12.PlatformPaySheetUpdateParams? params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePlatformSheet,
          [],
          {#params: params},
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> configurePlatformOrderTracking(
          {required _i12.PlatformPayOrderDetails? orderDetails}) =>
      (super.noSuchMethod(
        Invocation.method(
          #configurePlatformOrderTracking,
          [],
          {#orderDetails: orderDetails},
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i12.TokenData> createApplePayToken(
          Map<String, dynamic>? payment) =>
      (super.noSuchMethod(
        Invocation.method(
          #createApplePayToken,
          [payment],
        ),
        returnValue: _i9.Future<_i12.TokenData>.value(_FakeTokenData_15(
          this,
          Invocation.method(
            #createApplePayToken,
            [payment],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i12.TokenData>.value(_FakeTokenData_15(
          this,
          Invocation.method(
            #createApplePayToken,
            [payment],
          ),
        )),
      ) as _i9.Future<_i12.TokenData>);

  @override
  _i9.Future<_i12.PaymentMethod> createPaymentMethod({
    required _i12.PaymentMethodParams? params,
    _i12.PaymentMethodOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPaymentMethod,
          [],
          {
            #params: params,
            #options: options,
          },
        ),
        returnValue: _i9.Future<_i12.PaymentMethod>.value(_FakePaymentMethod_16(
          this,
          Invocation.method(
            #createPaymentMethod,
            [],
            {
              #params: params,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i12.PaymentMethod>.value(_FakePaymentMethod_16(
          this,
          Invocation.method(
            #createPaymentMethod,
            [],
            {
              #params: params,
              #options: options,
            },
          ),
        )),
      ) as _i9.Future<_i12.PaymentMethod>);

  @override
  _i9.Future<_i12.TokenData> createToken(_i12.CreateTokenParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #createToken,
          [params],
        ),
        returnValue: _i9.Future<_i12.TokenData>.value(_FakeTokenData_15(
          this,
          Invocation.method(
            #createToken,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i12.TokenData>.value(_FakeTokenData_15(
          this,
          Invocation.method(
            #createToken,
            [params],
          ),
        )),
      ) as _i9.Future<_i12.TokenData>);

  @override
  _i9.Future<_i12.PaymentIntent> retrievePaymentIntent(String? clientSecret) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrievePaymentIntent,
          [clientSecret],
        ),
        returnValue: _i9.Future<_i12.PaymentIntent>.value(_FakePaymentIntent_14(
          this,
          Invocation.method(
            #retrievePaymentIntent,
            [clientSecret],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i12.PaymentIntent>.value(_FakePaymentIntent_14(
          this,
          Invocation.method(
            #retrievePaymentIntent,
            [clientSecret],
          ),
        )),
      ) as _i9.Future<_i12.PaymentIntent>);

  @override
  _i9.Future<_i12.SetupIntent> retrieveSetupIntent(String? clientSecret) =>
      (super.noSuchMethod(
        Invocation.method(
          #retrieveSetupIntent,
          [clientSecret],
        ),
        returnValue: _i9.Future<_i12.SetupIntent>.value(_FakeSetupIntent_13(
          this,
          Invocation.method(
            #retrieveSetupIntent,
            [clientSecret],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i12.SetupIntent>.value(_FakeSetupIntent_13(
          this,
          Invocation.method(
            #retrieveSetupIntent,
            [clientSecret],
          ),
        )),
      ) as _i9.Future<_i12.SetupIntent>);

  @override
  _i9.Future<void> openApplePaySetup() => (super.noSuchMethod(
        Invocation.method(
          #openApplePaySetup,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<bool> handleURLCallback(String? url) => (super.noSuchMethod(
        Invocation.method(
          #handleURLCallback,
          [url],
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<_i12.PaymentIntent> confirmPayment({
    required String? paymentIntentClientSecret,
    _i12.PaymentMethodParams? data,
    _i12.PaymentMethodOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmPayment,
          [],
          {
            #paymentIntentClientSecret: paymentIntentClientSecret,
            #data: data,
            #options: options,
          },
        ),
        returnValue: _i9.Future<_i12.PaymentIntent>.value(_FakePaymentIntent_14(
          this,
          Invocation.method(
            #confirmPayment,
            [],
            {
              #paymentIntentClientSecret: paymentIntentClientSecret,
              #data: data,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i12.PaymentIntent>.value(_FakePaymentIntent_14(
          this,
          Invocation.method(
            #confirmPayment,
            [],
            {
              #paymentIntentClientSecret: paymentIntentClientSecret,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i9.Future<_i12.PaymentIntent>);

  @override
  _i9.Future<_i12.PaymentIntent> handleNextAction(
    String? paymentIntentClientSecret, {
    String? returnURL,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleNextAction,
          [paymentIntentClientSecret],
          {#returnURL: returnURL},
        ),
        returnValue: _i9.Future<_i12.PaymentIntent>.value(_FakePaymentIntent_14(
          this,
          Invocation.method(
            #handleNextAction,
            [paymentIntentClientSecret],
            {#returnURL: returnURL},
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i12.PaymentIntent>.value(_FakePaymentIntent_14(
          this,
          Invocation.method(
            #handleNextAction,
            [paymentIntentClientSecret],
            {#returnURL: returnURL},
          ),
        )),
      ) as _i9.Future<_i12.PaymentIntent>);

  @override
  _i9.Future<_i12.SetupIntent> handleNextActionForSetupIntent(
    String? setupIntentClientSecret, {
    String? returnURL,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleNextActionForSetupIntent,
          [setupIntentClientSecret],
          {#returnURL: returnURL},
        ),
        returnValue: _i9.Future<_i12.SetupIntent>.value(_FakeSetupIntent_13(
          this,
          Invocation.method(
            #handleNextActionForSetupIntent,
            [setupIntentClientSecret],
            {#returnURL: returnURL},
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i12.SetupIntent>.value(_FakeSetupIntent_13(
          this,
          Invocation.method(
            #handleNextActionForSetupIntent,
            [setupIntentClientSecret],
            {#returnURL: returnURL},
          ),
        )),
      ) as _i9.Future<_i12.SetupIntent>);

  @override
  _i9.Future<_i12.SetupIntent> confirmSetupIntent({
    required String? paymentIntentClientSecret,
    required _i12.PaymentMethodParams? params,
    _i12.PaymentMethodOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmSetupIntent,
          [],
          {
            #paymentIntentClientSecret: paymentIntentClientSecret,
            #params: params,
            #options: options,
          },
        ),
        returnValue: _i9.Future<_i12.SetupIntent>.value(_FakeSetupIntent_13(
          this,
          Invocation.method(
            #confirmSetupIntent,
            [],
            {
              #paymentIntentClientSecret: paymentIntentClientSecret,
              #params: params,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i12.SetupIntent>.value(_FakeSetupIntent_13(
          this,
          Invocation.method(
            #confirmSetupIntent,
            [],
            {
              #paymentIntentClientSecret: paymentIntentClientSecret,
              #params: params,
              #options: options,
            },
          ),
        )),
      ) as _i9.Future<_i12.SetupIntent>);

  @override
  _i9.Future<String?> createTokenForCVCUpdate(String? cvc) =>
      (super.noSuchMethod(
        Invocation.method(
          #createTokenForCVCUpdate,
          [cvc],
        ),
        returnValue: _i9.Future<String?>.value(),
        returnValueForMissingStub: _i9.Future<String?>.value(),
      ) as _i9.Future<String?>);

  @override
  _i9.Future<_i12.PaymentSheetPaymentOption?> initPaymentSheet(
          {required _i12.SetupPaymentSheetParameters?
              paymentSheetParameters}) =>
      (super.noSuchMethod(
        Invocation.method(
          #initPaymentSheet,
          [],
          {#paymentSheetParameters: paymentSheetParameters},
        ),
        returnValue: _i9.Future<_i12.PaymentSheetPaymentOption?>.value(),
        returnValueForMissingStub:
            _i9.Future<_i12.PaymentSheetPaymentOption?>.value(),
      ) as _i9.Future<_i12.PaymentSheetPaymentOption?>);

  @override
  _i9.Future<_i12.PaymentSheetPaymentOption?> presentPaymentSheet(
          {_i12.PaymentSheetPresentOptions? options}) =>
      (super.noSuchMethod(
        Invocation.method(
          #presentPaymentSheet,
          [],
          {#options: options},
        ),
        returnValue: _i9.Future<_i12.PaymentSheetPaymentOption?>.value(),
        returnValueForMissingStub:
            _i9.Future<_i12.PaymentSheetPaymentOption?>.value(),
      ) as _i9.Future<_i12.PaymentSheetPaymentOption?>);

  @override
  _i9.Future<void> intentCreationCallback(
          _i12.IntentCreationCallbackParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #intentCreationCallback,
          [params],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> resetPaymentSheetCustomer() => (super.noSuchMethod(
        Invocation.method(
          #resetPaymentSheetCustomer,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> confirmPaymentSheetPayment() => (super.noSuchMethod(
        Invocation.method(
          #confirmPaymentSheetPayment,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> dangerouslyUpdateCardDetails(_i12.CardDetails? card) =>
      (super.noSuchMethod(
        Invocation.method(
          #dangerouslyUpdateCardDetails,
          [card],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> initGooglePay(_i12.GooglePayInitParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #initGooglePay,
          [params],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> presentGooglePay(_i12.PresentGooglePayParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #presentGooglePay,
          [params],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i12.PaymentMethod> createGooglePayPaymentMethod(
          _i12.CreateGooglePayPaymentParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #createGooglePayPaymentMethod,
          [params],
        ),
        returnValue: _i9.Future<_i12.PaymentMethod>.value(_FakePaymentMethod_16(
          this,
          Invocation.method(
            #createGooglePayPaymentMethod,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i12.PaymentMethod>.value(_FakePaymentMethod_16(
          this,
          Invocation.method(
            #createGooglePayPaymentMethod,
            [params],
          ),
        )),
      ) as _i9.Future<_i12.PaymentMethod>);

  @override
  _i9.Future<bool> isGooglePaySupported(
          _i12.IsGooglePaySupportedParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #isGooglePaySupported,
          [params],
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<_i12.PaymentIntent> collectBankAccount({
    required bool? isPaymentIntent,
    required String? clientSecret,
    required _i12.CollectBankAccountParams? params,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #collectBankAccount,
          [],
          {
            #isPaymentIntent: isPaymentIntent,
            #clientSecret: clientSecret,
            #params: params,
          },
        ),
        returnValue: _i9.Future<_i12.PaymentIntent>.value(_FakePaymentIntent_14(
          this,
          Invocation.method(
            #collectBankAccount,
            [],
            {
              #isPaymentIntent: isPaymentIntent,
              #clientSecret: clientSecret,
              #params: params,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i12.PaymentIntent>.value(_FakePaymentIntent_14(
          this,
          Invocation.method(
            #collectBankAccount,
            [],
            {
              #isPaymentIntent: isPaymentIntent,
              #clientSecret: clientSecret,
              #params: params,
            },
          ),
        )),
      ) as _i9.Future<_i12.PaymentIntent>);

  @override
  _i9.Future<_i12.PaymentIntent> verifyPaymentIntentWithMicrodeposits({
    required bool? isPaymentIntent,
    required String? clientSecret,
    required _i12.VerifyMicroDepositsParams? params,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPaymentIntentWithMicrodeposits,
          [],
          {
            #isPaymentIntent: isPaymentIntent,
            #clientSecret: clientSecret,
            #params: params,
          },
        ),
        returnValue: _i9.Future<_i12.PaymentIntent>.value(_FakePaymentIntent_14(
          this,
          Invocation.method(
            #verifyPaymentIntentWithMicrodeposits,
            [],
            {
              #isPaymentIntent: isPaymentIntent,
              #clientSecret: clientSecret,
              #params: params,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i12.PaymentIntent>.value(_FakePaymentIntent_14(
          this,
          Invocation.method(
            #verifyPaymentIntentWithMicrodeposits,
            [],
            {
              #isPaymentIntent: isPaymentIntent,
              #clientSecret: clientSecret,
              #params: params,
            },
          ),
        )),
      ) as _i9.Future<_i12.PaymentIntent>);

  @override
  _i9.Future<_i12.AddToWalletResult> canAddToWallet(String? last4) =>
      (super.noSuchMethod(
        Invocation.method(
          #canAddToWallet,
          [last4],
        ),
        returnValue:
            _i9.Future<_i12.AddToWalletResult>.value(_FakeAddToWalletResult_17(
          this,
          Invocation.method(
            #canAddToWallet,
            [last4],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i12.AddToWalletResult>.value(_FakeAddToWalletResult_17(
          this,
          Invocation.method(
            #canAddToWallet,
            [last4],
          ),
        )),
      ) as _i9.Future<_i12.AddToWalletResult>);

  @override
  _i9.Future<_i12.CanAddCardToWalletResult> canAddCardToWallet(
          _i12.CanAddCardToWalletParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #canAddCardToWallet,
          [params],
        ),
        returnValue: _i9.Future<_i12.CanAddCardToWalletResult>.value(
            _FakeCanAddCardToWalletResult_18(
          this,
          Invocation.method(
            #canAddCardToWallet,
            [params],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i12.CanAddCardToWalletResult>.value(
                _FakeCanAddCardToWalletResult_18(
          this,
          Invocation.method(
            #canAddCardToWallet,
            [params],
          ),
        )),
      ) as _i9.Future<_i12.CanAddCardToWalletResult>);

  @override
  _i9.Future<_i12.IsCardInWalletResult> isCardInWallet(String? cardLastFour) =>
      (super.noSuchMethod(
        Invocation.method(
          #isCardInWallet,
          [cardLastFour],
        ),
        returnValue: _i9.Future<_i12.IsCardInWalletResult>.value(
            _FakeIsCardInWalletResult_19(
          this,
          Invocation.method(
            #isCardInWallet,
            [cardLastFour],
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i12.IsCardInWalletResult>.value(
            _FakeIsCardInWalletResult_19(
          this,
          Invocation.method(
            #isCardInWallet,
            [cardLastFour],
          ),
        )),
      ) as _i9.Future<_i12.IsCardInWalletResult>);

  @override
  _i9.Future<_i12.FinancialConnectionTokenResult> collectBankAccountToken(
          {required String? clientSecret}) =>
      (super.noSuchMethod(
        Invocation.method(
          #collectBankAccountToken,
          [],
          {#clientSecret: clientSecret},
        ),
        returnValue: _i9.Future<_i12.FinancialConnectionTokenResult>.value(
            _FakeFinancialConnectionTokenResult_20(
          this,
          Invocation.method(
            #collectBankAccountToken,
            [],
            {#clientSecret: clientSecret},
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i12.FinancialConnectionTokenResult>.value(
                _FakeFinancialConnectionTokenResult_20(
          this,
          Invocation.method(
            #collectBankAccountToken,
            [],
            {#clientSecret: clientSecret},
          ),
        )),
      ) as _i9.Future<_i12.FinancialConnectionTokenResult>);

  @override
  _i9.Future<_i12.FinancialConnectionSessionResult>
      collectFinancialConnectionsAccounts({required String? clientSecret}) =>
          (super.noSuchMethod(
            Invocation.method(
              #collectFinancialConnectionsAccounts,
              [],
              {#clientSecret: clientSecret},
            ),
            returnValue:
                _i9.Future<_i12.FinancialConnectionSessionResult>.value(
                    _FakeFinancialConnectionSessionResult_21(
              this,
              Invocation.method(
                #collectFinancialConnectionsAccounts,
                [],
                {#clientSecret: clientSecret},
              ),
            )),
            returnValueForMissingStub:
                _i9.Future<_i12.FinancialConnectionSessionResult>.value(
                    _FakeFinancialConnectionSessionResult_21(
              this,
              Invocation.method(
                #collectFinancialConnectionsAccounts,
                [],
                {#clientSecret: clientSecret},
              ),
            )),
          ) as _i9.Future<_i12.FinancialConnectionSessionResult>);

  @override
  _i9.Future<_i12.CustomerSheetResult?> initCustomerSheet(
          {required _i12.CustomerSheetInitParams? customerSheetInitParams}) =>
      (super.noSuchMethod(
        Invocation.method(
          #initCustomerSheet,
          [],
          {#customerSheetInitParams: customerSheetInitParams},
        ),
        returnValue: _i9.Future<_i12.CustomerSheetResult?>.value(),
        returnValueForMissingStub:
            _i9.Future<_i12.CustomerSheetResult?>.value(),
      ) as _i9.Future<_i12.CustomerSheetResult?>);

  @override
  _i9.Future<_i12.CustomerSheetResult?> presentCustomerSheet(
          {_i12.CustomerSheetPresentParams? options}) =>
      (super.noSuchMethod(
        Invocation.method(
          #presentCustomerSheet,
          [],
          {#options: options},
        ),
        returnValue: _i9.Future<_i12.CustomerSheetResult?>.value(),
        returnValueForMissingStub:
            _i9.Future<_i12.CustomerSheetResult?>.value(),
      ) as _i9.Future<_i12.CustomerSheetResult?>);

  @override
  _i9.Future<_i12.CustomerSheetResult?>
      retrieveCustomerSheetPaymentOptionSelection() => (super.noSuchMethod(
            Invocation.method(
              #retrieveCustomerSheetPaymentOptionSelection,
              [],
            ),
            returnValue: _i9.Future<_i12.CustomerSheetResult?>.value(),
            returnValueForMissingStub:
                _i9.Future<_i12.CustomerSheetResult?>.value(),
          ) as _i9.Future<_i12.CustomerSheetResult?>);

  @override
  void markNeedsSettings() => super.noSuchMethod(
        Invocation.method(
          #markNeedsSettings,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [StripeService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStripeService extends _i1.Mock implements _i29.StripeService {
  @override
  bool get enableLogs => (super.noSuchMethod(
        Invocation.getter(#enableLogs),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i9.Future<void> createPayment(String? clientSecret) => (super.noSuchMethod(
        Invocation.method(
          #createPayment,
          [clientSecret],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> presentPaymentSheet() => (super.noSuchMethod(
        Invocation.method(
          #presentPaymentSheet,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> successSheet() => (super.noSuchMethod(
        Invocation.method(
          #successSheet,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> failSheet() => (super.noSuchMethod(
        Invocation.method(
          #failSheet,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  void logEntryCheck() => super.noSuchMethod(
        Invocation.method(
          #logEntryCheck,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logD(dynamic message) => super.noSuchMethod(
        Invocation.method(
          #logD,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logI(dynamic message) => super.noSuchMethod(
        Invocation.method(
          #logI,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logW(dynamic message) => super.noSuchMethod(
        Invocation.method(
          #logW,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logE(dynamic message) => super.noSuchMethod(
        Invocation.method(
          #logE,
          [message],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Repository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRepository extends _i1.Mock implements _i30.Repository<_i13.Event> {
  @override
  bool get enableLogs => (super.noSuchMethod(
        Invocation.getter(#enableLogs),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i9.Stream<_i14.DataState<List<_i13.Event>>> get dataStream =>
      (super.noSuchMethod(
        Invocation.getter(#dataStream),
        returnValue: _i9.Stream<_i14.DataState<List<_i13.Event>>>.empty(),
        returnValueForMissingStub:
            _i9.Stream<_i14.DataState<List<_i13.Event>>>.empty(),
      ) as _i9.Stream<_i14.DataState<List<_i13.Event>>>);

  @override
  _i9.Stream<_i14.DataState<_i13.Event>> get singleItemStream =>
      (super.noSuchMethod(
        Invocation.getter(#singleItemStream),
        returnValue: _i9.Stream<_i14.DataState<_i13.Event>>.empty(),
        returnValueForMissingStub:
            _i9.Stream<_i14.DataState<_i13.Event>>.empty(),
      ) as _i9.Stream<_i14.DataState<_i13.Event>>);

  @override
  _i13.Event parseItem(Map<String, dynamic>? json) => (super.noSuchMethod(
        Invocation.method(
          #parseItem,
          [json],
        ),
        returnValue: _FakeEvent_22(
          this,
          Invocation.method(
            #parseItem,
            [json],
          ),
        ),
        returnValueForMissingStub: _FakeEvent_22(
          this,
          Invocation.method(
            #parseItem,
            [json],
          ),
        ),
      ) as _i13.Event);

  @override
  List<_i13.Event> parseList(List<Map<String, dynamic>>? jsonList) =>
      (super.noSuchMethod(
        Invocation.method(
          #parseList,
          [jsonList],
        ),
        returnValue: <_i13.Event>[],
        returnValueForMissingStub: <_i13.Event>[],
      ) as List<_i13.Event>);

  @override
  String getItemId(_i13.Event? item) => (super.noSuchMethod(
        Invocation.method(
          #getItemId,
          [item],
        ),
        returnValue: _i23.dummyValue<String>(
          this,
          Invocation.method(
            #getItemId,
            [item],
          ),
        ),
        returnValueForMissingStub: _i23.dummyValue<String>(
          this,
          Invocation.method(
            #getItemId,
            [item],
          ),
        ),
      ) as String);

  @override
  _i9.Future<void> fetchAll({
    _i14.PaginatedOption? paginatedOptions,
    required String? endpoint,
    Map<String, dynamic>? queryParams,
    bool? ignoreCache = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAll,
          [],
          {
            #paginatedOptions: paginatedOptions,
            #endpoint: endpoint,
            #queryParams: queryParams,
            #ignoreCache: ignoreCache,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> fetchById({
    required String? id,
    required String? endpoint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchById,
          [],
          {
            #id: id,
            #endpoint: endpoint,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> update({
    required _i13.Event? item,
    required String? endpoint,
    required Map<String, dynamic>? body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [],
          {
            #item: item,
            #endpoint: endpoint,
            #body: body,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> delete({
    required int? id,
    required String? endpoint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {
            #id: id,
            #endpoint: endpoint,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  void logEntryCheck() => super.noSuchMethod(
        Invocation.method(
          #logEntryCheck,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logD(dynamic message) => super.noSuchMethod(
        Invocation.method(
          #logD,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logI(dynamic message) => super.noSuchMethod(
        Invocation.method(
          #logI,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logW(dynamic message) => super.noSuchMethod(
        Invocation.method(
          #logW,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logE(dynamic message) => super.noSuchMethod(
        Invocation.method(
          #logE,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emitListState(_i14.DataState<List<_i13.Event>>? state) =>
      super.noSuchMethod(
        Invocation.method(
          #emitListState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emitSingleState(_i14.DataState<_i13.Event>? state) => super.noSuchMethod(
        Invocation.method(
          #emitSingleState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emitListError(Object? error) => super.noSuchMethod(
        Invocation.method(
          #emitListError,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emitSingleError(Object? error) => super.noSuchMethod(
        Invocation.method(
          #emitSingleError,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<Map<String, dynamic>> fetchApiData({
    required String? endpoint,
    Map<String, dynamic>? queryParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchApiData,
          [],
          {
            #endpoint: endpoint,
            #queryParams: queryParams,
          },
        ),
        returnValue:
            _i9.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i9.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i9.Future<Map<String, dynamic>>);

  @override
  _i9.Future<Map<String, dynamic>> postApiData({
    required String? endpoint,
    required Map<String, dynamic>? body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postApiData,
          [],
          {
            #endpoint: endpoint,
            #body: body,
          },
        ),
        returnValue:
            _i9.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i9.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i9.Future<Map<String, dynamic>>);

  @override
  _i9.Future<Map<String, dynamic>> deleteApiData({required String? endpoint}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteApiData,
          [],
          {#endpoint: endpoint},
        ),
        returnValue:
            _i9.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i9.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i9.Future<Map<String, dynamic>>);

  @override
  _i9.Future<void> saveToDatabase(_i13.Event? item) => (super.noSuchMethod(
        Invocation.method(
          #saveToDatabase,
          [item],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i13.Event?> getFromDatabase(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getFromDatabase,
          [id],
        ),
        returnValue: _i9.Future<_i13.Event?>.value(),
        returnValueForMissingStub: _i9.Future<_i13.Event?>.value(),
      ) as _i9.Future<_i13.Event?>);

  @override
  _i9.Future<void> deleteFromDatabase(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteFromDatabase,
          [id],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<List<_i13.Event>> getAllFromDatabase() => (super.noSuchMethod(
        Invocation.method(
          #getAllFromDatabase,
          [],
        ),
        returnValue: _i9.Future<List<_i13.Event>>.value(<_i13.Event>[]),
        returnValueForMissingStub:
            _i9.Future<List<_i13.Event>>.value(<_i13.Event>[]),
      ) as _i9.Future<List<_i13.Event>>);

  @override
  _i9.Future<void> clearDatabase() => (super.noSuchMethod(
        Invocation.method(
          #clearDatabase,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i14.PaginatedData<_i13.Event>? getCachedData(String? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCachedData,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as _i14.PaginatedData<_i13.Event>?);

  @override
  _i9.Future<void> updateCache(
    String? key,
    List<_i13.Event>? items, [
    _i14.PaginatedOption? pagination,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCache,
          [
            key,
            items,
            pagination,
          ],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  String buildCacheKey(
    String? endpoint,
    int? page,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #buildCacheKey,
          [
            endpoint,
            page,
          ],
        ),
        returnValue: _i23.dummyValue<String>(
          this,
          Invocation.method(
            #buildCacheKey,
            [
              endpoint,
              page,
            ],
          ),
        ),
        returnValueForMissingStub: _i23.dummyValue<String>(
          this,
          Invocation.method(
            #buildCacheKey,
            [
              endpoint,
              page,
            ],
          ),
        ),
      ) as String);

  @override
  _i14.PaginatedOption extractPaginationFromResponse(
    Map<String, dynamic>? response,
    _i14.PaginatedOption? currentPagination,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #extractPaginationFromResponse,
          [
            response,
            currentPagination,
          ],
        ),
        returnValue: _FakePaginatedOption_23(
          this,
          Invocation.method(
            #extractPaginationFromResponse,
            [
              response,
              currentPagination,
            ],
          ),
        ),
        returnValueForMissingStub: _FakePaginatedOption_23(
          this,
          Invocation.method(
            #extractPaginationFromResponse,
            [
              response,
              currentPagination,
            ],
          ),
        ),
      ) as _i14.PaginatedOption);

  @override
  List<_i13.Event> appendNewItems(
    List<_i13.Event>? currentItems,
    List<_i13.Event>? newItems,
    String Function(_i13.Event)? getItemId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #appendNewItems,
          [
            currentItems,
            newItems,
            getItemId,
          ],
        ),
        returnValue: <_i13.Event>[],
        returnValueForMissingStub: <_i13.Event>[],
      ) as List<_i13.Event>);

  @override
  void clearCache() => super.noSuchMethod(
        Invocation.method(
          #clearCache,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
